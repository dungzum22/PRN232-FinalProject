version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: bakery_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bakery_password
      POSTGRES_DB: bakery_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bakery-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bakery_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bakery-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway (Port 5000)
  gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: publish-gateway
    container_name: bakery_gateway
    ports:
      - "5000:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bakery_db;Username=postgres;Password=bakery_password;"
      JwtSettings__Secret: "your-super-secret-key-at-least-32-characters-long"
      JwtSettings__ExpirationMinutes: 60
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bakery-network

  # Auth API (Port 5001)
  auth:
    build:
      context: .
      dockerfile: AuthAPI/Dockerfile
    container_name: bakery_auth
    ports:
      - "5001:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bakery_auth_db;Username=postgres;Password=bakery_password;"
      JwtSettings__Secret: "your-super-secret-key-at-least-32-characters-long"
      JwtSettings__ExpirationMinutes: 60
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bakery-network

  # User API (Port 5002)
  user:
    build:
      context: .
      dockerfile: UserAPI/Dockerfile
    container_name: bakery_user
    ports:
      - "5002:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bakery_user_db;Username=postgres;Password=bakery_password;"
      JwtSettings__Secret: "your-super-secret-key-at-least-32-characters-long"
      JwtSettings__ExpirationMinutes: 60
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bakery-network

  # Product API (Port 5003)
  product:
    build:
      context: .
      dockerfile: ProductAndCategoryAPI/Dockerfile
    container_name: bakery_product
    ports:
      - "5003:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bakery_product_db;Username=postgres;Password=bakery_password;"
      JwtSettings__Secret: "your-super-secret-key-at-least-32-characters-long"
      JwtSettings__ExpirationMinutes: 60
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bakery-network

  # Cart API (Port 5004)
  cart:
    build:
      context: .
      dockerfile: CartAPI/Dockerfile
    container_name: bakery_cart
    ports:
      - "5004:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bakery_cart_db;Username=postgres;Password=bakery_password;"
      JwtSettings__Secret: "your-super-secret-key-at-least-32-characters-long"
      JwtSettings__ExpirationMinutes: 60
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bakery-network

  # Order API (Port 5005)
  order:
    build:
      context: .
      dockerfile: OrderAPI/Dockerfile
    container_name: bakery_order
    ports:
      - "5005:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bakery_order_db;Username=postgres;Password=bakery_password;"
      JwtSettings__Secret: "your-super-secret-key-at-least-32-characters-long"
      JwtSettings__ExpirationMinutes: 60
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bakery-network

  # Feedback API (Port 5006)
  feedback:
    build:
      context: .
      dockerfile: FeedbackAPI/Dockerfile
    container_name: bakery_feedback
    ports:
      - "5006:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bakery_feedback_db;Username=postgres;Password=bakery_password;"
      JwtSettings__Secret: "your-super-secret-key-at-least-32-characters-long"
      JwtSettings__ExpirationMinutes: 60
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bakery-network

  # Notification API (Port 5007)
  notification:
    build:
      context: .
      dockerfile: NotificationAPI/Dockerfile
    container_name: bakery_notification
    ports:
      - "5007:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bakery_notification_db;Username=postgres;Password=bakery_password;"
      JwtSettings__Secret: "your-super-secret-key-at-least-32-characters-long"
      JwtSettings__ExpirationMinutes: 60
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bakery-network

networks:
  bakery-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
